#quick fix messages
add.return.type=\u6dfb\u52a0\u8fd4\u56de\u7c7b\u578b\u58f0\u660e
add.init.keyword=\u6dfb\u52a0 'init' \u5173\u952e\u5b57
add.init.keyword.family=\u6dfb\u52a0 'init' \u5173\u952e\u5b57
add.init.keyword.in.whole.project=\u5728\u6574\u4e2a\u9879\u76ee\u4e2d\u6dfb\u52a0 'init' \u5173\u952e\u5b57
add.init.keyword.in.whole.project.modal.title=\u5728\u6574\u4e2a\u9879\u76ee\u4e2d\u6dfb\u52a0 'init' \u5173\u952e\u5b57
add.init.keyword.in.whole.project.family=\u5728\u6574\u4e2a\u9879\u76ee\u4e2d\u6dfb\u52a0 'init' \u5173\u952e\u5b57
insert.delegation.call=\u63d2\u5165 ''{0}()'' \u8c03\u7528
remove.useless.nullable=\u79fb\u9664\u65e0\u7528 '?'
replace.operation.in.binary.expression=\u5728\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f0f\u66ff\u6362\u64cd\u4f5c
replace.cast.with.static.assert=\u7528\u9759\u6001\u65ad\u8a00\u66ff\u6362 cast
introduce.non.null.assertion=\u6dfb\u52a0\u975e\u7a7a\u65ad\u8a00(!!)\u8c03\u7528
remove.unnecessary.non.null.assertion=\u79fb\u9664\u4e0d\u5fc5\u8981\u7684\u975e\u7a7a\u65ad\u8a00(!!)
change.to.backing.field=\u66f4\u6539\u5f15\u7528\u4e3a\u5e55\u540e\u5b57\u6bb5
implement.members=\u5b9e\u73b0\u6210\u5458
import.fix=\u5bfc\u5165
imports.chooser.title=\u5bfc\u5165
rename.kotlin.package.class.error=\u65e0\u6cd5\u91cd\u547d\u540d Kotlin package facade class
add.semicolon.after.invocation=\u5728 ''{0}'' \u8c03\u7528\u540e\u6dfb\u52a0\u5206\u53f7
add.semicolon.family=\u6dfb\u52a0\u5206\u53f7
change.type=\u5c06\u7c7b\u578b\u4ece ''{0}'' \u66f4\u6539\u4e3a ''{1}''
change.type.family=\u66f4\u6539\u7c7b\u578b
change.function.signature=\u66f4\u6539\u51fd\u6570 ''{0}'' \u7684\u7b7e\u540d

replace.call.error.skipped.defaults=\u65e0\u6cd5\u8df3\u8fc7\u9ed8\u8ba4\u53c2\u6570\u3002
replace.call.error.undefined.returntype=\u65e0\u6cd5\u786e\u5b9a\u8fd4\u56de\u7c7b\u578b\u3002
replace.call.error.duplicate.or.missing.arguments=\u91cd\u590d\u6216\u7f3a\u5c11\u53c2\u6570\u3002
replace.call.error.invalid.arguments=\u5305\u542b\u65e0\u6548\u53c2\u6570\u3002

replace.call.error.vararg.not.last=\u65e0\u6cd5\u5904\u7406 vararg \u4e4b\u540e\u7684\u547d\u540d\u53c2\u6570\u3002
replace.call.error.contains.returns_boolean=\u5305\u542b\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a Boolean\u3002

add.kotlin.signature.action.family.name=\u6307\u5b9a\u81ea\u5b9a\u4e49 Kotlin \u7b7e\u540d
add.kotlin.signature.action.text=\u6307\u5b9a\u81ea\u5b9a\u4e49 Kotlin \u7b7e\u540d
edit.kotlin.signature.action.text=\u7f16\u8f91\u81ea\u5b9a\u4e49 Kotlin \u7b7e\u540d
view.kotlin.signature.action.text=\u67e5\u770b\u81ea\u5b9a\u4e49 Kotlin \u7b7e\u540d

goto.super.function.chooser.title=\u9009\u62e9 super \u51fd\u6570
goto.super.property.chooser.title=\u9009\u62e9\u8d85\u7c7b\u5c5e\u6027
goto.super.class.chooser.title=\u9009\u62e9\u8d85\u7c7b\u6216\u63a5\u53e3

unused.receiver.parameter=\u4ece\u672a\u4f7f\u7528\u63a5\u6536\u5668\u53c2\u6570
unused.receiver.parameter.remove=\u79fb\u9664\u5197\u4f59\u7684\u63a5\u6536\u5668\u53c2\u6570

livetemplate.description.main=main() \u51fd\u6570
livetemplate.description.soutp=\u5c06\u51fd\u6570\u53c2\u6570\u540d\u79f0\u548c\u503c\u6253\u5370\u5230 System.out
livetemplate.description.iter=\u8fed\u4ee3 iterable \u7684\u5143\u7d20(for-in loop)
livetemplate.description.ifn=\u63d2\u5165 ''if null'' \u8868\u8fbe\u5f0f
livetemplate.description.inn=\u63d2\u5165 ''if not null'' \u8868\u8fbe\u5f0f
livetemplate.description.void=\u51fd\u6570\u4e0d\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9
livetemplate.description.fun0=\u65e0\u53c2\u6570\u51fd\u6570
livetemplate.description.fun1=\u5355\u53c2\u6570\u51fd\u6570
livetemplate.description.fun2=\u53cc\u53c2\u6570\u51fd\u6570
livetemplate.description.interface=\u63a5\u53e3
livetemplate.description.singleton=Singleton
livetemplate.description.closure=\u95ed\u5305(\u6ca1\u6709\u540d\u79f0\u7684\u51fd\u6570)
livetemplate.description.anonymous=\u533f\u540d\u7c7b
livetemplate.description.exfun=\u6269\u5c55\u51fd\u6570
livetemplate.description.exval=\u6269\u5c55\u53ea\u8bfb\u5c5e\u6027
livetemplate.description.exvar=\u6269\u5c55\u8bfb\u5199\u5c5e\u6027

options.kotlin.attribute.descriptor.annotation=\u6ce8\u89e3
options.kotlin.attribute.descriptor.builtin.annotation=\u4fee\u9970\u7b26
options.kotlin.attribute.descriptor.string.escape=String//string \u548c\u6a21\u677f\u5927\u62ec\u53f7\u4e2d\u7684\u8f6c\u4e49
options.kotlin.attribute.descriptor.closure.braces=\u62ec\u53f7\u548c\u64cd\u4f5c\u7b26//Lambda \u8868\u8fbe\u5f0f\u5927\u62ec\u53f7\u548c\u7bad\u5934
options.kotlin.attribute.descriptor.safe.access=\u62ec\u53f7\u548c\u64cd\u4f5c\u7b26//\u5b89\u5168\u8bbf\u95ee\u7684\u70b9
options.kotlin.attribute.descriptor.quest=\u62ec\u53f7\u548c\u64cd\u4f5c\u7b26//\u7c7b\u578b\u4e3a\u7a7a\u6027\u6807\u8bb0
options.kotlin.attribute.descriptor.exclexcl=\u62ec\u53f7\u548c\u64cd\u4f5c\u7b26//\u975e\u7a7a\u65ad\u8a00
options.kotlin.attribute.descriptor.arrow=\u62ec\u53f7\u548c\u64cd\u4f5c\u7b26//\u7bad\u5934
options.kotlin.attribute.descriptor.colon=\u62ec\u53f7\u548c\u64cd\u4f5c\u7b26//\u5192\u53f7
options.kotlin.attribute.descriptor.double.colon=\u62ec\u53f7\u548c\u64cd\u4f5c\u7b26//\u53cc\u91cd\u5192\u53f7
options.kotlin.attribute.descriptor.kdoc.comment=\u6ce8\u91ca//KDoc//KDoc \u6ce8\u91ca
options.kotlin.attribute.descriptor.kdoc.tag=\u6ce8\u91ca//KDoc//KDoc \u6807\u8bb0
options.kotlin.attribute.descriptor.kdoc.value=\u6ce8\u91ca//KDoc//KDoc \u6807\u8bb0\u4e2d\u7684\u94fe\u63a5
options.kotlin.attribute.descriptor.object=\u7c7b\u548c\u63a5\u53e3//\u5bf9\u8c61
options.kotlin.attribute.descriptor.enumEntry=\u7c7b\u548c\u63a5\u53e3//Enum entry
options.kotlin.attribute.descriptor.typeAlias=\u7c7b\u548c\u63a5\u53e3//\u7c7b\u578b\u522b\u540d
options.kotlin.attribute.descriptor.var=\u5c5e\u6027\u548c\u53d8\u91cf//Var(\u53ef\u53d8\u53d8\u91cf\u3001\u53c2\u6570\u6216\u5c5e\u6027)
options.kotlin.attribute.descriptor.local.variable=\u5c5e\u6027\u548c\u53d8\u91cf//\u5c40\u90e8\u53d8\u91cf\u6216\u503c
options.kotlin.attribute.descriptor.captured.variable=\u5c5e\u6027\u548c\u53d8\u91cf//\u95ed\u5305\u4e2d\u6355\u83b7\u7684\u53d8\u91cf\u548c\u503c
options.kotlin.attribute.descriptor.instance.property=\u5c5e\u6027\u548c\u53d8\u91cf//\u5b9e\u4f8b\u5c5e\u6027
options.kotlin.attribute.descriptor.package.property=\u5c5e\u6027\u548c\u53d8\u91cf//\u5305\u7ea7\u5c5e\u6027
options.kotlin.attribute.descriptor.field=\u5c5e\u6027\u548c\u53d8\u91cf//\u5e55\u540e\u5b57\u6bb5\u53d8\u91cf
options.kotlin.attribute.descriptor.extension.property=\u5c5e\u6027\u548c\u53d8\u91cf//\u6269\u5c55\u5c5e\u6027
options.kotlin.attribute.descriptor.synthetic.extension.property=\u5c5e\u6027\u548c\u53d8\u91cf//\u5408\u6210\u6269\u5c55\u5c5e\u6027
options.kotlin.attribute.descriptor.dynamic.property=\u5c5e\u6027\u548c\u53d8\u91cf//\u52a8\u6001\u5c5e\u6027
options.kotlin.attribute.descriptor.android.extensions.property=\u5c5e\u6027\u548c\u53d8\u91cf//Android \u6269\u5c55\u5408\u6210\u5c5e\u6027
options.kotlin.attribute.descriptor.it=\u53c2\u6570//Lambda \u8868\u8fbe\u5f0f\u9ed8\u8ba4\u53c2\u6570
options.kotlin.attribute.descriptor.fun=\u51fd\u6570//\u51fd\u6570\u58f0\u660e
options.kotlin.attribute.descriptor.fun.call=\u51fd\u6570//\u51fd\u6570\u8c03\u7528
options.kotlin.attribute.descriptor.dynamic.fun.call=\u51fd\u6570//\u52a8\u6001\u51fd\u6570\u8c03\u7528
options.kotlin.attribute.descriptor.package.fun.call=\u51fd\u6570//\u5305\u7ea7\u51fd\u6570\u8c03\u7528
options.kotlin.attribute.descriptor.extension.fun.call=\u51fd\u6570//\u6269\u5c55\u51fd\u6570\u8c03\u7528
options.kotlin.attribute.descriptor.constructor.call=\u51fd\u6570//\u6784\u9020\u51fd\u6570\u8c03\u7528
options.kotlin.attribute.descriptor.variable.as.function.call=\u5c5e\u6027\u548c\u53d8\u91cf//\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u8c03\u7528
options.kotlin.attribute.descriptor.variable.as.function.like.call=\u5c5e\u6027\u548c\u53d8\u91cf//\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u7c7b\u4f3c\u8c03\u7528
options.kotlin.attribute.descriptor.smart.cast=\u667a\u80fd\u8f6c\u6362//\u667a\u80fd\u8f6c\u6362\u503c
options.kotlin.attribute.descriptor.smart.constant=\u667a\u80fd\u8f6c\u6362//\u667a\u80fd\u5e38\u91cf
options.kotlin.attribute.descriptor.smart.cast.receiver=\u667a\u80fd\u8f6c\u6362//\u667a\u80fd\u8f6c\u6362\u9690\u5f0f\u63a5\u6536\u5668
options.kotlin.attribute.descriptor.label=\u6807\u7b7e

migrate.sure=\u66ff\u6362 sure() \u8c03\u7528\u4e3a !!\u5728\u9879\u76ee\u4e2d
migrate.class.object.to.companion=\u5c06 'class' \u5173\u952e\u5b57\u66ff\u6362\u4e3a 'companion' \u4fee\u9970\u7b26
migrate.class.object.to.companion.family=\u5c06 'class' \u5173\u952e\u5b57\u66ff\u6362\u4e3a 'companion' \u4fee\u9970\u7b26
migrate.class.object.to.companion.in.whole.project=\u5728\u6574\u4e2a\u9879\u76ee\u4e2d\u5c06 'class' \u5173\u952e\u5b57\u66ff\u6362\u4e3a 'companion' \u4fee\u9970\u7b26
migrate.class.object.to.companion.in.whole.project.modal.title=\u5728\u6574\u4e2a\u9879\u76ee\u4e2d\u5c06 'class' \u5173\u952e\u5b57\u66ff\u6362\u4e3a 'companion' \u4fee\u9970\u7b26
migrate.class.object.to.companion.in.whole.project.family=\u5728\u6574\u4e2a\u9879\u76ee\u4e2d\u5c06 'class' \u5173\u952e\u5b57\u66ff\u6362\u4e3a 'companion' \u4fee\u9970\u7b26
migrate.lambda.syntax=\u8fc1\u79fb lambda \u8bed\u6cd5
migrate.lambda.syntax.family=\u8fc1\u79fb lambda \u8bed\u6cd5
change.to.property.name.family.name=\u66f4\u6539\u4e3a\u5c5e\u6027\u540d\u79f0
change.to.property.name.action=\u5c06 ''{0}'' \u66f4\u6539\u4e3a ''{1}''
create.from.usage.family=\u4ece\u4f7f\u7528\u521b\u5efa
create.local.variable.from.usage=\u521b\u5efa\u5c40\u90e8\u53d8\u91cf ''{0}''
create.parameter.from.usage=\u521b\u5efa\u53c2\u6570 ''{0}''
surround.with=\u5305\u56f4\uff0c\u4f7f\u7528
surround.with.string.template="${expr}"
surround.with.when.template=when (expr) {}
surround.with.runtime.type.cast.template=(expr as RuntimeType)
surround.with.function.template={ }
surround.with.cannot.perform.action=\u65e0\u6cd5\u5bf9\u5f53\u524d contextsurround.with.function.template={ } \u6267\u884c Surround With \u64cd\u4f5c
kotlin.code.transformations=Kotlin \u4ee3\u7801\u8f6c\u6362
fold.if.to.call=\u7528\u65b9\u6cd5\u8c03\u7528\u66ff\u6362 'if' \u8868\u8fbe\u5f0f
fold.if.to.call.family=\u7528\u65b9\u6cd5\u8c03\u7528\u66ff\u6362 'if' \u8868\u8fbe\u5f0f
fold.when.to.call=\u7528\u65b9\u6cd5\u8c03\u7528\u66ff\u6362 'when' \u8868\u8fbe\u5f0f
fold.when.to.call.family=\u7528\u65b9\u6cd5\u8c03\u7528\u66ff\u6362 'when' \u8868\u8fbe\u5f0f
unfold.call.to.if=\u7528 'if' \u8868\u8fbe\u5f0f\u66ff\u6362\u65b9\u6cd5\u8c03\u7528
unfold.call.to.if.family=\u7528 'if' \u8868\u8fbe\u5f0f\u66ff\u6362\u65b9\u6cd5\u8c03\u7528
unfold.call.to.when=\u7528 'when' \u8868\u8fbe\u5f0f\u66ff\u6362\u65b9\u6cd5\u8c03\u7528
unfold.call.to.when.family=\u7528 'when' \u8868\u8fbe\u5f0f\u66ff\u6362\u65b9\u6cd5\u8c03\u7528
transform.if.statement.with.assignments.to.expression=\u8f6c\u6362\u5177\u6709\u8d4b\u503c\u7684 'if' \u8bed\u53e5\u4e3a\u8868\u8fbe\u5f0f
transform.assignment.with.if.expression.to.statement=\u8f6c\u6362\u5177\u6709 'if' \u8868\u8fbe\u5f0f\u7684\u8d4b\u503c\u4e3a\u8bed\u53e5
transform.if.statement.with.assignments.to.expression.family=\u8f6c\u6362\u5177\u6709\u8d4b\u503c\u7684 'if' \u8bed\u53e5\u4e3a\u8868\u8fbe\u5f0f
transform.assignment.with.if.expression.to.statement.family=\u8f6c\u6362\u5177\u6709 'if' \u8868\u8fbe\u5f0f\u7684\u8d4b\u503c\u4e3a\u8bed\u53e5

replace.java.class.argument=\u66ff\u6362 javaClass<T>() \u4e3a T::class
replace.java.class.argument.family=\u66ff\u6362 javaClass<T>() \u4e3a T::class

replace.java.class.parameter=\u5728\u6574\u4e2a\u6ce8\u89e3\u4e2d\u66ff\u6362 Class<T> \u4e3a KClass<T>
replace.java.class.parameter.family=\u5728\u6574\u4e2a\u6ce8\u89e3\u4e2d\u66ff\u6362 Class<T> \u4e3a KClass<T>

property.is.implemented.too.many=\u5df2\u7ecf\u5b9e\u73b0
property.is.overridden.too.many=\u5728\u5b50\u7c7b\u4e2d\u88ab\u8986\u76d6
property.is.implemented.header=\u5b9e\u73b0\u4e8e <br/>
property.is.overridden.header=\u8986\u76d6\u4e8e <br/>

navigation.title.overriding.property=\u9009\u62e9 {0} \u7684\u5b9e\u73b0
navigation.findUsages.title.overriding.property=\u8986\u76d6 {0} \u7684\u5c5e\u6027
navigation.title.super.declaration=\u9009\u62e9 {0} \u7684 super \u5b9e\u73b0
navigation.findUsages.title.super.declaration={0} \u7684 super \u5b9e\u73b0

remove.expression= \u79fb\u9664 ''{0}''
unwrap.expression= \u89e3\u5f00 ''{0}''
remove.else= \u79fb\u9664 ''{0}'' \u4e2d\u7684 else
unwrap.else= \u5c55\u5f00 ''{0}'' \u4e2d\u7684 else

usageType.annotation.type= \u6ce8\u89e3
usageType.import= Import \u6307\u4ee4
usageType.callable.reference= Callable \u5f15\u7528
usageType.type.constraint= \u7c7b\u578b\u7ea6\u675f
usageType.type.argument= \u7c7b\u578b\u5b9e\u53c2
usageType.value.parameter.type= \u53c2\u6570\u7c7b\u578b
usageType.nonLocal.property.type= \u7c7b/\u5bf9\u8c61\u5c5e\u6027\u7c7b\u578b
usageType.local.variable.type= \u5c40\u90e8\u53d8\u91cf\u7c7b\u578b
usageType.function.return.type= \u51fd\u6570\u8fd4\u56de\u7c7b\u578b
usageType.superType= Supertype
usageType.is= \ 'is' \u64cd\u4f5c\u7684\u76ee\u6807\u7c7b\u578b
usageType.as= \ 'as' \u64cd\u4f5c\u7684\u76ee\u6807\u7c7b\u578b
usageType.class.object= \u5d4c\u5957\u7c7b/\u5bf9\u8c61
usageType.companion.object= \u4f34\u751f\u5bf9\u8c61
usageType.instantiation= \u5b9e\u4f8b\u5316
usageType.function.call= \u51fd\u6570\u8c03\u7528
usageType.implicit.get= \u9690\u5f0f 'get'
usageType.implicit.set= \u9690\u5f0f 'set'
usageType.implicit.invoke= \u9690\u5f0f 'invoke'
usageType.implicit.iteration= \u9690\u5f0f\u8fed\u4ee3
usageType.property.delegation= \u5c5e\u6027\u59d4\u6258
usageType.extension.receiver.type= \u6269\u5c55\u63a5\u6536\u5668\u7c7b\u578b
usageType.super.type.qualifier= super \u7c7b\u578b\u9650\u5b9a\u7b26
usageType.receiver= \u63a5\u6536\u5668
usageType.selector= \u9009\u62e9\u5668
usageType.delegate= \u4ee3\u7406
usageType.packageDirective= Package \u6307\u4ee4
usageType.packageMemberAccess= \u5305\u6210\u5458\u8bbf\u95ee

x.in.y={1} \u4e2d\u7684 {0} 
x.implements.y={1} \u4e2d\u7684 {0} \u5b9e\u73b0 {3} \u4e2d\u7684 {2}\u3002
x.overrides.y.in.class.list={0} \u91cd\u5199\u4ee5\u4e0b\u7c7b/\u63a5\u53e3\u4e2d\u7684\u58f0\u660e\uff1a{1} \u662f\u5426\u8981 {2} \u57fa\u7c7b\u58f0\u660e\uff1f

unused.overriding.methods.title=\u672a\u4f7f\u7528\u7684\u8986\u76d6\u6210\u5458
there.are.unused.methods.that.override.methods.you.delete=\u6709\u672a\u4f7f\u7528\u7684\u6210\u5458\u8986\u76d6\u4e86\u4f60\u5220\u9664\u7684\u65b9\u6cd5\u3002
choose.the.ones.you.want.to.be.deleted=\u9009\u62e9\u8981\u5220\u9664\u7684\u5185\u5bb9\u3002
method.column=\u6210\u5458
delete.param.in.method.hierarchy={0} \u662f\u65b9\u6cd5\u5c42\u6b21\u7ed3\u6784\u7684\u4e00\u90e8\u5206\u3002\u8981\u5220\u9664\u591a\u4e2a\u53c2\u6570\u5417\uff1f

find.what.implementing.methods.checkbox=\u5b9e\u73b0\u51fd\u6570(&I)
find.what.overriding.methods.checkbox=\u91cd\u5199\u51fd\u6570(&R)
find.what.implementing.properties.checkbox=\u5b9e\u73b0\u5c5e\u6027(&I)
find.what.overriding.properties.checkbox=\u91cd\u5199\u5c5e\u6027(&R)
find.what.property.readers.checkbox=\u8bfb\u53d6\u5668
find.what.property.writers.checkbox=\u5199\u5165\u5668
find.options.include.overloaded.methods.checkbox=\u5305\u542b\u91cd\u8f7d\u51fd\u6570\u548c\u6269\u5c55(&V)
find.what.functions.usages.checkbox=\u51fd\u6570\u7684\u4f7f\u7528(&F)
find.what.properties.usages.checkbox=\u5c5e\u6027\u7684\u4f7f\u7528(&P)
find.what.constructor.usages.checkbox=\u6784\u9020\u51fd\u6570\u7684\u4f7f\u7528(&C)
find.what.derived.classes.checkbox=\u6d3e\u751f\u7c7b(&D)
find.what.derived.interfaces.checkbox=\u6d3e\u751f\u63a5\u53e3(&I)

hierarchy.legend.member.is.defined.in.class=\u6210\u5458\u5728\u7c7b\u4e2d\u5b9a\u4e49
hierarchy.legend.member.defined.in.superclass=\u6210\u5458\u672a\u5728\u7c7b\u4e2d\u5b9a\u4e49\uff0c\u4f46\u5728\u8d85\u7c7b\u4e2d\u5b9a\u4e49
hierarchy.legend.member.should.be.defined=\u5e94\u8be5\u5b9a\u4e49\u6210\u5458\uff0c\u56e0\u4e3a\u7c7b\u4e0d\u662f\u62bd\u8c61\u7684

suppress.warnings.family=\u6291\u5236\u8b66\u544a
suppress.warning.for=\u4e3a {1}{2} \u6291\u5236 ''{0}'' 

reflection.not.found=\u5728\u7c7b\u8def\u5f84\u4e2d\u627e\u4e0d\u5230\u53cd\u5c04
add.reflection.to.classpath=\u5c06 kotlin-reflect.jar \u6dfb\u52a0\u5230\u7c7b\u8def\u5f84
add.test.to.classpath=\u5c06 kotlin-test.jar \u6dfb\u52a0\u5230\u7c7b\u8def\u5f84
add.script.runtime.to.classpath=\u5c06 kotlin-script-runtime.jar \u6dfb\u52a0\u5230\u7c7b\u8def\u5f84

# Kotlin Compiler Settings Tab

#Common
kotlin.compiler.option.generate.no.warnings=\u62a5\u544a\u7f16\u8bd1\u5668\u8b66\u544a(&W)
kotlin.compiler.option.additional.command.line.parameters=\u9644\u52a0\u547d\u4ee4\u884c\u53c2\u6570(&A):
kotlin.compiler.option.additional.command.line.parameters.dialog.title=\u9644\u52a0\u547d\u4ee4\u884c\u53c2\u6570
kotlin.compiler.option.enable.new.inference.in.ide=\u542f\u7528 IDE \u5206\u6790\u7684\u65b0\u578b\u63a8\u65ad\u7b97\u6cd5

# Kotlin to JVM
kotlin.compiler.jvm.option.panel.title=Kotlin to JVM

# Kotlin to JavaScript
kotlin.compiler.js.option.panel.title=Kotlin to JavaScript
kotlin.compiler.js.option.generate.sourcemaps=\u751f\u6210\u6e90\u6620\u5c04(&S)
kotlin.compiler.js.option.output.prefix=\u5728\u751f\u6210\u7684\u4ee3\u7801\u524d\u6dfb\u52a0\u6587\u4ef6(&P)\uff1a
kotlin.compiler.js.option.output.postfix=\u8981\u9644\u52a0\u5230\u751f\u6210\u7684\u4ee3\u7801\u7684\u6587\u4ef6(&O)\uff1a
kotlin.compiler.js.option.output.prefix.browse.title=\u9009\u62e9\u8981\u9884\u5904\u7406\u5230\u751f\u6210\u4ee3\u7801\u7684\u6587\u4ef6
kotlin.compiler.js.option.output.postfix.browse.title=\u9009\u62e9\u8981\u9644\u52a0\u5230\u751f\u6210\u4ee3\u7801\u7684\u6587\u4ef6
kotlin.compiler.js.option.output.copy.files=\u590d\u5236\u5e93\u8fd0\u884c\u65f6\u6587\u4ef6(&C)
kotlin.compiler.js.option.output.copy.dir=\u5e93\u8fd0\u884c\u65f6\u6587\u4ef6\u7684\u8f93\u51fa\u76ee\u5f55(&U)\uff1a

# Debugger
debugger.filter.ignore.internal.classes=\u4e0d\u8981\u6b65\u5165 Kotlin \u8fd0\u884c\u65f6\u5e93\u5b9e\u73b0\u7c7b
debugger.data.view.delegated.properties=\u8ba1\u7b97\u59d4\u6258\u5c5e\u6027\u7684\u503c(\u53ef\u80fd\u5f71\u54cd\u7a0b\u5e8f\u6267\u884c)
debugger.field.watchpoints.tab.title=Kotlin \u5b57\u6bb5\u89c2\u5bdf\u70b9
debugger.field.watchpoints.properties.panel.field.access.label=\u5b57\u6bb5\u8bbf\u95ee(&A)
debugger.field.watchpoints.properties.panel.field.modification.label=\u5b57\u6bb5\u4fee\u6539\u5668(&M)
debugger.field.watchpoints.properties.panel.field.initialization.label=\u5b57\u6bb5\u521d\u59cb\u5316(&I)

# Android Lint
android.klint.inspections.group.name=\u7528\u4e8e Kotlin \u7684 Android Lint

# Scratch Files
scratch.run.button=\u8fd0\u884c\u4e34\u65f6\u6587\u4ef6
scratch.run.from.here.button=\u4ece\u8fd9\u91cc\u8fd0\u884c\u4e34\u65f6\u6587\u4ef6
scratch.stop.button=\u505c\u6b62\u4e34\u65f6\u6587\u4ef6\u6267\u884c
scratch.clear.button=\u6e05\u9664\u7ed3\u679c

